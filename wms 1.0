from flask import Flask, request, jsonify
from flask_sqlalchemy import SQLAlchemy
import os

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'postgresql://username:password@localhost/inventorydb'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

class Item(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(128), nullable=False)
    quantity = db.Column(db.Integer, nullable=False)
    barcode = db.Column(db.String(128), unique=True, nullable=False)
    type = db.Column(db.String(32))  # '1D' or '2D'
    additional_info = db.Column(db.Text)

    def __repr__(self):
        return f'<Item {self.name}>'

@app.route('/items', methods=['POST'])
def add_item():
    data = request.get_json()
    item = Item(name=data['name'], quantity=data['quantity'], barcode=data['barcode'], type=data['type'], additional_info=data.get('additional_info'))
    db.session.add(item)
    db.session.commit()
    return jsonify({'message': 'Item added'}), 201

@app.route('/items/<int:item_id>', methods=['PUT'])
def update_item(item_id):
    item = Item.query.get(item_id)
    if not item:
        return jsonify({'message': 'Item not found'}), 404
    data = request.get_json()
    item.name = data.get('name', item.name)
    item.quantity = data.get('quantity', item.quantity)
    item.barcode = data.get('barcode', item.barcode)
    item.type = data.get('type', item.type)
    item.additional_info = data.get('additional_info', item.additional_info)
    db.session.commit()
    return jsonify({'message': 'Item updated'})

@app.route('/items', methods=['GET'])
def list_items():
    items = Item.query.all()
    return jsonify([{'id': item.id, 'name': item.name, 'quantity': item.quantity, 'barcode': item.barcode, 'type': item.type, 'additional_info': item.additional_info} for item in items])

@app.route('/items/<int:item_id>', methods=['GET'])
def get_item(item_id):
    item = Item.query.get(item_id)
    if not item:
        return jsonify({'message': 'Item not found'}), 404
    return jsonify({'id': item.id, 'name': item.name, 'quantity': item.quantity, 'barcode': item.barcode, 'type': item.type, 'additional_info': item.additional_info})

@app.route('/items/<int:item_id>', methods=['DELETE'])
def delete_item(item_id):
    item = Item.query.get(item_id)
    if not item:
        return jsonify({'message': 'Item not found'}), 404
    db.session.delete(item)
    db.session.commit()
    return jsonify({'message': 'Item deleted'})

if __name__ == '__main__':
    db.create_all()
    app.run(debug=True)
